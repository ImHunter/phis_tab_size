#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Отчет.АдресТаблицыРазмеров = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
КонецПроцедуры   

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗагрузитьРазмеры(Команда)  
	ОписаниеОповещенияЗагрузкиРазмеров = Новый ОписаниеОповещения("ОбработатьВводРазмеров", ЭтотОбъект);
	ОткрытьФорму("ВнешнийОтчет.ФизическийРазмерТаблиц.Форма.ЗагрузкаРазмеров", , ЭтотОбъект, , , , ОписаниеОповещенияЗагрузкиРазмеров, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры     

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьВводРазмеров(ДанныеРазмеров, ДополнительныеПараметры) Экспорт  
	
	Если ДанныеРазмеров=Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ОбработатьРезультатыЗагрузкиРазмеров(ДанныеРазмеров); 
	ПоказатьОповещениеПользователя(НСтр("ru = 'Таблица размеров загружена'"));
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьРезультатыЗагрузкиРазмеров(РезультатыЗагрузкиРазмеров)  
	
	Файл = Новый Файл(РезультатыЗагрузкиРазмеров.ИмяФайлаРезультата);
	Отчет.РасширениеФайлаРазмеров = ВРег(Файл.Расширение);
	Если СтрНачинаетсяС(Отчет.РасширениеФайлаРазмеров, ".") Тогда 
		Отчет.РасширениеФайлаРазмеров = Сред(Отчет.РасширениеФайлаРазмеров, 2);
	КонецЕсли;
	
	ВременныйФайл = ПолучитьИмяВременногоФайла(Отчет.РасширениеФайлаРазмеров);
	ДанныеРазмеров = ПолучитьИзВременногоХранилища(РезультатыЗагрузкиРазмеров.АдресДанныхФайла);
	ДанныеРазмеров.Записать(ВременныйФайл);   
	
	Попытка
	
		ТабДок = Новый ТабличныйДокумент;
		ТабДок.Прочитать(ВременныйФайл); 
		СформироватьТаблицуРазмеров(ТабДок);	
		
		УдалитьФайлы(ВременныйФайл);
	
	Исключение   
		
		УдалитьФайлы(ВременныйФайл);
		ВызватьИсключение;  
		
	КонецПопытки;
	
КонецПроцедуры    

&НаСервере
Процедура СформироватьТаблицуРазмеров(ТабДок)  
	
    ТаблицаРазмеров = НоваяТаблицаРазмеров();
	ИменаПолейДокумента = ИменаПолейДокумента(ТабДок, ТаблицаРазмеров);	
	
	ЗаполнитьТаблицуРазмеров(ТабДок, ТаблицаРазмеров, ИменаПолейДокумента);
	
	ЗаполнитьРейтинги(ТаблицаРазмеров, "data_size_int", "МестоПоРазмеруДанных");
	ЗаполнитьРейтинги(ТаблицаРазмеров, "used_size_int", "МестоПоИспользованномуРазмеру");
	ЗаполнитьРейтинги(ТаблицаРазмеров, "index_size_int", "МестоПоРазмеруИндексов");
	ЗаполнитьРейтинги(ТаблицаРазмеров, "row_count", "МестоПоКоличествуСтрок");
	ЗаполнитьОбщиеРейтинги(ТаблицаРазмеров);
	
	ПоместитьВоВременноеХранилище(ТаблицаРазмеров, Отчет.АдресТаблицыРазмеров);
	
КонецПроцедуры    

&НаСервереБезКонтекста
Функция НоваяТаблицаРазмеров()

	ОписаниеТиповСтрока0 = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0, ДопустимаяДлина.Переменная));
	ОписаниеТиповЦелое = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 0, ДопустимыйЗнак.Любой));
	ОписаниеТиповВещественное = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10, 2, ДопустимыйЗнак.Любой));
	
	Размеры = Новый ТаблицаЗначений;
	Размеры.Колонки.Добавить("table_name", ОписаниеТиповСтрока0);
	Размеры.Колонки.Добавить("row_count", ОписаниеТиповЦелое);
	Размеры.Колонки.Добавить("reserved_size_int", ОписаниеТиповВещественное);
	Размеры.Колонки.Добавить("data_size_int", ОписаниеТиповВещественное);
	Размеры.Колонки.Добавить("index_size_int", ОписаниеТиповВещественное);
	Размеры.Колонки.Добавить("unused_size_int", ОписаниеТиповВещественное);
	Размеры.Колонки.Добавить("used_size_int", ОписаниеТиповВещественное);
	Размеры.Колонки.Добавить("МестоПоРазмеруДанных", ОписаниеТиповЦелое);
	Размеры.Колонки.Добавить("МестоПоИспользованномуРазмеру", ОписаниеТиповЦелое);
	Размеры.Колонки.Добавить("МестоПоРазмеруИндексов", ОписаниеТиповЦелое);
	Размеры.Колонки.Добавить("МестоПоКоличествуСтрок", ОписаниеТиповЦелое);
	Размеры.Колонки.Добавить("МестоВысшее", ОписаниеТиповЦелое);
	Размеры.Колонки.Добавить("МестоНизшее", ОписаниеТиповЦелое);
	
	Возврат Размеры;
	
КонецФункции   

&НаСервереБезКонтекста
Функция ИменаПолейДокумента(ТабличныйДокумент, ТаблицаРазмеров) 
	
	Результат = Новый Соответствие;
	
	#Если Сервер И Не Сервер Тогда // Фейк для автокомплита
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТаблицаРазмеров = Новый ТаблицаЗначений;
	#КонецЕсли // Конец фейковой директивы
	
	Для Поз = 1 По ТабличныйДокумент.ШиринаТаблицы Цикл
		ТекстЯчейки = ТабличныйДокумент.Область(1, Поз).Текст;
		Колонка = ТаблицаРазмеров.Колонки.Найти(ТекстЯчейки);
		Если Колонка<>Неопределено Тогда 
			Результат.Вставить(Поз, ТекстЯчейки);
		КонецЕсли;
	КонецЦикла; 
	
	Возврат Результат;
	
КонецФункции  

&НаСервереБезКонтекста
Процедура ЗаполнитьТаблицуРазмеров(ТабличныйДокумент, ТаблицаРазмеров, ИменаПолей)

	#Если Сервер И Не Сервер Тогда // Фейк для автокомплита
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТаблицаРазмеров = Новый ТаблицаЗначений; 
		ИменаПолей = Новый Соответствие;
	#КонецЕсли // Конец фейковой директивы  
	
	Для НомерСтроки = 2 По ТабличныйДокумент.ВысотаТаблицы Цикл 
		НоваяСтрока = ТаблицаРазмеров.Добавить();
		Для НомерКолонки = 1 По ТабличныйДокумент.ШиринаСтраницы Цикл 
			ИмяПоля = ИменаПолей.Получить(НомерКолонки);
			Если ИмяПоля<>Неопределено Тогда
				НоваяСтрока[ИмяПоля] = ТабличныйДокумент.Область(НомерСтроки, НомерКолонки).Текст;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры  

&НаСервереБезКонтекста
Процедура ЗаполнитьРейтинги(ТаблицаРазмеров, ИмяПоляДанных, ИмяПоляРейтинга) 
	
	#Если Сервер И Не Сервер Тогда // Фейк для автокомплита
		ТаблицаРазмеров = Новый ТаблицаЗначений; 
	#КонецЕсли // Конец фейковой директивы 
	
	ТаблицаРазмеров.Сортировать(ИмяПоляДанных + " УБЫВ");
	ТекНомер = 1;
	Для НомерСтроки = 0 По ТаблицаРазмеров.Количество()-1 Цикл 
		ТаблицаРазмеров[НомерСтроки][ИмяПоляРейтинга] = ТекНомер;
		ТекНомер = ТекНомер + 1;
	КонецЦикла;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьОбщиеРейтинги(ТаблицаРазмеров) 
	
	#Если Сервер И Не Сервер Тогда // Фейк для автокомплита
		ТаблицаРазмеров = Новый ТаблицаЗначений; 
	#КонецЕсли // Конец фейковой директивы 
	
	ТекНомер = 1;
	Для НомерСтроки = 0 По ТаблицаРазмеров.Количество()-1 Цикл  
		
		ТекСтрока = ТаблицаРазмеров[НомерСтроки];
		ТекСтрока["МестоВысшее"] = Мин(
			ТекСтрока["МестоПоРазмеруДанных"],
			ТекСтрока["МестоПоИспользованномуРазмеру"],
			ТекСтрока["МестоПоРазмеруИндексов"],
			ТекСтрока["МестоПоКоличествуСтрок"]);
			
		ТекСтрока["МестоНизшее"] = Макс(
			ТекСтрока["МестоПоРазмеруДанных"],
			ТекСтрока["МестоПоИспользованномуРазмеру"],
			ТекСтрока["МестоПоРазмеруИндексов"],
			ТекСтрока["МестоПоКоличествуСтрок"]);

		ТекНомер = ТекНомер + 1;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти
